<div id="comments_container">
	
	<% if show_comments %>
		<div id="comments_control_area">
			<a class="hide comments_link">Hide Comments</a>
			<span id="show_comments_throbber_wrapper"></span>
	    	<a class="show comments_link" style="display: none;">Show Comments</a>
		</div>
	
		<div id="comments_container_errors"></div>
		
		<div id="comments_content_wrapper">
		<div id="comments_content">
		<%= render "matches/show_comments", :match => match, :comments => match.comments %>
		</div>
		</div>
	<% else %>
		<a class="show comments_link">Show Comments</a>
	    <span id="show_comments_throbber_wrapper"></span>
		<a class="hide comments_link" style="display: none;">Hide Comments</a>
		
		<div id="show_comments_errors"></div>
		
		<div id="comments_content_wrapper" style="display: none;">
			<div id="comments_content"></div>
		</div>
	<% end %>
</div>

<script type="text/javascript">

$(document).ready(function() {

  function hideComments() {
	//remove 'hide comments' link and any other associated stuff
	$(".hide.comments_link").hide();
	//set the cookie to show that we want comments hidden
	$.cookie("show_comments", false);
	//clear any errors we've had
	$("#comments_container_errors").empty();
	//show 'show comments' link TODO: what happens if they click this again before we're done?
	$(".show.comments_link").show();
	//slide the comment data up all cute-like
	$("#comments_content_wrapper").slideUp();
  }

  $('.hide.comments_link').click(hideComments);

  function showComments() {
	//remove 'show comments' link and any other associated stuff
	$(".show.comments_link").hide();
	//set the cookie to show that we want comments shown
	$.cookie("show_comments", true);
	//clear any errors we've had
	$("#comments_container_errors").empty();
	//if we don't have the comment data yet
	if (weHaveCommentsData()) {
		//go ahead and show the comment data, since we already have it loaded!
		finishShowingComments();
	} else {
		//show a throbber
		$.throbberShow({parent: "#show_comments_throbber_wrapper"});
		//fetch the comment data from the server asynchronously, and set up a receiver.
		$.ajax("<%=show_comments_match_path(@battle.match) %>",
			{accept : "html", success : receive_commentsData_and_finish, error : handle_receiveCommentsData_error});	
	}
  }


  $('.show.comments_link').click(showComments);

  function handle_receiveCommentsData_error(jqXHR, textStatus, errorThrown) {
	//add an error message to our error area
	$("#comments_container_errors").append(
		"Whoops! We encountered an error trying to get these comments. Try again later. (error was \"" + errorThrown + "\")");
	//remove the throbber
	$.throbberHide();
	//show the "show comments" link again, since we failed
	$(".show.comments_link").show();
  }

  function receive_commentsData_and_finish(data, textStatus, jqXHR) {
	//receive and append the comment data
  	$('#comments_content').html(jqXHR.responseText);
	//remove the throbber
	$.throbberHide();

	finishShowingComments();
  }

  function finishShowingComments() {
	//show the "hide comments" link
	$(".hide.comments_link").show();
	//make the comment data slide down all cute-like
	$('#comments_content_wrapper').slideDown();
  }

  function weHaveCommentsData() {
	return $("#comments_content:empty").length == 0;
  }

/*
$('#toggle_comments').bind('ajax:success', function(evt, data, status, xhr){
	$('#toggle_comments').data("load_state", "loaded");
	$('#comments_container').hide();
	$('#comments_container').append(xhr.responseText); //#show_comments
	$('#comments_container').slideDown();
	$('#toggle_comments').data("expanded", true);


	$("#show_comments_link").text('Hide Comments');
	$('#show_comments_link').show();
	$.throbberHide();
});

//OLD LINE FOR SHOWING COMMENTS <%= link_to "Show Comments", show_comments_match_path(@battle.match), :remote => true, :html => { 'data-type' => 'html'}, :id => "show_comments_link"%>	
/*
  $('.animal_image_form_real').bind('ajax:success', function(evt, data, status, xhr){
  	$('#battle').replaceWith(xhr.responseText);
  });
*/
  
  //function show_comments() {
	//when we want to show comments...
		//set the cookie to show that we want the comments shown
		//remove 'show comments' link and any other associated stuff
		//if we don't have the comment data yet
			//show a throbber
			//fetch the comment data from the server
		    //receive the comment data
			//remove the throbber

		//make the comment data slide down all cute-like
		//else (we are doing this as part of the initial load)
			//just make it appear regular-style
			
 // }

	//OLD
   

  //TODO: need to handle error conditions
  
  //$('#toggle_comments').click(function() {
  	
  //});
/*
   
  $('#toggle_comments').data("load_state", "not loaded");
  $('#toggle_comments').data("expanded", false);
  
   //TODO: don't use beforeSend as a proxy for click. This is written like a retard
   //TODO: handle over-jamming (don't let them click link until it's fully expanded/retracted)
   //TODO: hide link while transition is occurring
  $('#toggle_comments').bind('ajax:beforeSend', function(evt, data, status, xhr){
  	if ($('#toggle_comments').data("expanded")) {
  		//hide
  		$('#comments_container').slideUp();
  		//$('#after_toggle').slideUp();
  		$('#toggle_comments').data("expanded", false);
  		$("#show_comments_link").text('Show Comments');
  	} else {
  		if ($('#toggle_comments').data("load_state") == "loaded") {
  			//$('#after_toggle').slideDown();

  			//show
  			$('#toggle_comments').data("expanded", true);
  			$('#comments_container').slideDown();
  			$("#show_comments_link").text('Hide Comments');
  		} else if ($('#toggle_comments').data("load_state") == "not loaded"){
  			//wait to show in ajax:success.
  			$('#toggle_comments').data("load_state", "loading");
     		//$("#show_comments_link").text('Loading...');
     		$('#show_comments_link').hide();
     		$.throbberShow({parent: "#throbber_area"});
  		} else {
  			return false; //we're in the middle of loading. Stop jamming on the button!
  		}
  	}
  	
     if ($('#toggle_comments').data("load_state") != "loading") {
  		return false; //cancel the ajax call
 	 } 
  });

*/  
});

</script>
</div>
<div id ="show_comments">
	<% if comments.count == 0 %>
		<div class="no comments_area">
			<p> Nobody has commented on this battle yet. </p>
		</div>
	<% else %>
		<div class="top comments_area">
			<h4>Top Comments</h4>
			<%= render 'matches/show_comment', :comment => comments.first, :match => match %>
			<% if comments.count > 1 %>
				<%= render 'matches/show_comment', :comment => comments[1], :match => match %>
			<% end %>
		</div>
	<% end %>
	<div class="all comments_area">
		<% if comments.count > 2 %>
		<h4>Recent Comments</h4>
		<% end %>
		<%= render "matches/add_comment", :match => match %>
		<% if comments.count > 2 %>
			<div class="recent comments_area"> <!-- TODO: change the name of this thing, and other comment areas -->
				<% comments.slice(2..(comments.length-1)).each do |comment|   %>
				<%= render 'matches/show_comment', :comment => comment, :match => match %> <!-- TODO: shouldn't have to add match here> -->
				<% end %>
			</div>
		<% else %>
			<div class="your_new comments_area" style="display: none;"></div>
		<% end %>
	</div>
</div>

<%= javascript_tag "var AUTH_TOKEN = #{form_authenticity_token.inspect};" if protect_against_forgery? %>

<%= javascript_tag "var USER_SIGNED_IN = #{user_signed_in?}" %>

<script type="text/javascript">

$(document).ready(function() {
	
	var SIGNUP_SIGNIN_OVERLAY_PARAMETERS = {
	speed: "fast",
		mask: {

			color: '#ffffbf',
			loadSpeed: 50,
			opacity: 0.5
		}
	};
	
	$(".vote_button_panel button").tooltip({ predelay: 220, effect: "fade"});
	
	function on_voteUp_click() {
		var buttonPanel = $(this).parent();
		
		$(".tooltip").hide();
		
		if (! buttonPanel.hasClass("voted_for")) {	
			//they are indeed executing an upvote

			show_upVote(buttonPanel);

			send_voteAction("voteUp", buttonPanel);
		} else {
			//they are undoing their previous upvote

			show_no_vote(buttonPanel);

			send_voteAction("undo_voteUp", buttonPanel);
		}
	}
	
	function on_voteDown_click() {
		var buttonPanel = $(this).parent();
		
		$(".tooltip").hide();
		
		if (! buttonPanel.hasClass("voted_against")) {	
			//they are indeed executing a downvote

			show_downVote(buttonPanel);

			send_voteAction("voteDown", buttonPanel);
		} else {
			//they are undoing their previous downvote

			show_no_vote(buttonPanel);

			send_voteAction("undo_voteDown", buttonPanel);
		}
	}
	
	if (USER_SIGNED_IN) {
		$("button.vote_up").click(on_voteUp_click);
		$("button.vote_down").click(on_voteDown_click);
	} else {
		//TODO: make it so we can select both buttons with one css selector
		$("button.vote_up").attr("rel", "#signup_signin_overlay");
		$("button.vote_down").attr("rel", "#signup_signin_overlay");
		$("button.vote_up[rel]").overlay(SIGNUP_SIGNIN_OVERLAY_PARAMETERS);
		$("button.vote_down[rel]").overlay(SIGNUP_SIGNIN_OVERLAY_PARAMETERS);
	}

	
	function send_voteAction(action, buttonPanel) {
		$.ajax( {
			url: voteAction_to_URL[action],
			type: "POST",
			data: {comment_id : buttonPanel.data("comment_id")},
			authenticity_token: encodeURIComponent( AUTH_TOKEN),
			//nothing special to do on success, since we are already showing the vote change to the user.
			error: voteAction_to_errorHandler[action](buttonPanel)
		});
	}
	
	//TODO: should these be locally scoped? will that work?
	
	voteAction_to_URL = {
		voteUp : "<%= vote_for_comment_match_path(match) %>",
		voteDown: "<%= vote_against_comment_match_path(match) %>",
		undo_voteUp: "<%= undo_vote_on_comment_match_path(match) %>",
		undo_voteDown: "<%= undo_vote_on_comment_match_path(match) %>"
	};
	


	voteAction_to_errorHandler = {
		voteUp : make_partial_errorHandler("record your up-vote", show_no_vote),
		voteDown: make_partial_errorHandler("record your down-vote", show_no_vote),
		undo_voteUp: make_partial_errorHandler("undo your vote", show_upVote),
		undo_voteDown: make_partial_errorHandler("undo your vote", show_downVote)
	};
	
	
	function show_upVote(buttonPanel) {
		buttonPanel.addClass("voted_for");
		buttonPanel.removeClass("voted_against");
	}
	
	function show_downVote(buttonPanel) {
		buttonPanel.addClass("voted_against");
		buttonPanel.removeClass("voted_for");
	}
	
	function show_no_vote(buttonPanel) {
		buttonPanel.removeClass("voted_for voted_against");
	}
	
	function make_partial_errorHandler(actionDescription, revertFunction) {
		var parameterizeMeWithAButtonPanel = function(buttonPanel) {
			var finalizedHandler = function (jqXHR, textStatus, errorThrown) {
				add_votingErrorMessage(actionDescription, errorThrown);
				revertFunction(buttonPanel);
			}
			return finalizedHandler;
		}
		return parameterizeMeWithAButtonPanel;
	}
	
	//TODO: consider parameterizing the error message facility on the client. (this code appears elsewhere very similar)
	function add_votingErrorMessage(actionDescription, errorThrown) {
		$("#comments_container_errors").append(
			"<p>Whoops! We encountered an error trying to " + actionDescription + ". Try again later. (error was \"" + errorThrown + "\")</p>");
	}
});
</script>